allprojects {
    apply plugin: 'eclipse'

    group = 'com.anjlab'
    version = '3.1.1'
}

import org.gradle.plugins.ide.eclipse.model.*;

apply plugin: 'java'
apply plugin: 'maven'

def javaVersion = org.gradle.internal.jvm.Jvm.current().javaVersion

sourceCompatibility = javaVersion.java8Compatible ? javaVersion.name : 1.7
targetCompatibility = sourceCompatibility

println "Building for Java ${targetCompatibility}"

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

dependencies {
    testCompile 'junit:junit:4.8.2'
    testCompile 'org.apache.derby:derby:10.9.1.0'
    testCompile 'org.postgresql:postgresql:9.+'

    compile 'net.sf.opencsv:opencsv:2.3'
    compile 'commons-cli:commons-cli:1.2'
    compile 'commons-io:commons-io:2.4'
    compile 'com.google.code.gson:gson:2.2.2'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'io.dropwizard.metrics:metrics-core:3.1.2'

    runtime 'commons-codec:commons-codec:1.10'
}

repositories {
    mavenLocal()
    mavenCentral()
}

task downloadJdbcDriver << {
    dependencies {
        if (!project.hasProperty("jdbcDriver")) {
            ext.jdbcDriver = 'org.postgresql:postgresql:9.+'
        }
        
        runtime jdbcDriver
    }
}

classes.dependsOn downloadJdbcDriver

task copyDeps(type: Copy) {
    into "$buildDir/libs/lib"
    from configurations.runtime
}

task copyShellScripts(type: Copy) {
    into "$buildDir/libs"
    from 'src/main/shell'
}

jar { dependsOn copyDeps, copyShellScripts }
